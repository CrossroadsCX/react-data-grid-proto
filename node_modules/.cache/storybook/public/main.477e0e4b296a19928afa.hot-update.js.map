{"version":3,"file":"main.477e0e4b296a19928afa.hot-update.js","sources":["webpack:///./src/reactGrid.tsx","webpack:///./src/selectEditor.tsx"],"sourcesContent":["import React from 'react'\nimport DataGrid, { TextEditor } from 'react-data-grid'\nimport SelectEditor from './selectEditor'\n\ninterface Row {\n  id: number;\n  name: string;\n  editor?: typeof TextEditor;\n}\n\nconst columns = [\n  { key: 'id', name: 'ID' },\n  { key: 'title', name: 'Title', editor: TextEditor },\n  { key: 'state', name: 'State', editor: SelectEditor}\n];\n\nconst rows = [\n  { id: 0, title: 'Example' },\n  { id: 1, title: 'Demo' }\n];\n\nconst rowKeyGetter = (row: Row) => {\n  return row.id\n}\n\nexport const ReactGrid = () => {\n  console.log(columns, rows)\n\n  return (\n    <DataGrid columns={columns} rows={rows} rowKeyGetter={rowKeyGetter} />\n  )\n}\n","import React from 'react'\nimport type { EditorProps } from 'react-data-grid'\nimport Select from 'react-select'\n\ntype OptionType = { [key: string]: any }\ntype OptionsType = Array<OptionType>\n\ninterface SelectEditorProps<TRow, TSummaryRow = unknown> extends EditorProps<TRow, TSummaryRow> {\n  options?: OptionsType;\n}\n\ninterface SelectOptions {\n  options?: OptionsType\n}\n\nexport default function SelectEditor<TRow, TSummaryRow>({\n  row,\n  column,\n  options,\n  onRowChange,\n  onClose,\n}: SelectEditorProps<TRow, TSummaryRow>) {\n  const selectOptions: SelectOptions = {}\n\n  if (options) {\n    selectOptions.options = options\n  }\n\n  return (\n    <Select {...selectOptions} />\n  )\n}\n"],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;AAQA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AANA;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAEA;;AAaA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAhBA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}