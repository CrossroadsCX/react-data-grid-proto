{"version":3,"file":"main.d3385d52d612e0d7a69f.hot-update.js","sources":["webpack:///./src/asyncSelectEditor.tsx"],"sourcesContent":["import React from 'react'\nimport type { CalculatedColumn, EditorProps  } from 'react-data-grid'\nimport Select, { ActionMeta, SingleValue, OptionsOrGroups } from 'react-select'\nimport AsyncSelect from 'react-select/async'\n\nexport type OptionType = { [key: string]: any }\nexport type OptionsType = Array<OptionType>\n\ninterface SelectColumn<TRow, TSummaryRow> extends CalculatedColumn<TRow, TSummaryRow> {\n  options: OptionsType;\n}\n\ninterface SelectEditorProps<TRow, TSummaryRow = unknown> extends EditorProps<TRow, TSummaryRow> {\n  loadOptions: (inputValue: string, callback: (options: OptionsType) => void) => Promise<OptionsType> | void;\n}\n\ninterface SelectOptions {\n  options?: OptionsType\n}\n\nexport default function AsyncSelectEditor<TRow, TSummaryRow>({\n  row,\n  column,\n  onRowChange,\n  onClose,\n  loadOptions,\n}: SelectEditorProps<TRow, TSummaryRow>) {\n  const selectOptions: SelectOptions = {}\n\n  const onChange = (newValue: SingleValue<OptionType>, actionMeta: ActionMeta<OptionType>) => {\n    const newRow = { ...row, [column.key]: newValue }\n    console.log(newRow)\n    onRowChange(newRow, true)\n  }\n\n  return (\n    <AsyncSelect\n      loadOptions={loadOptions}\n      menuPortalTarget={document.body}\n      onChange={onChange}\n      autoFocus\n    />\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAGA;;AAiBA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AAvBA;AACA;;;;;;;;;;;;;;;;A","sourceRoot":""}